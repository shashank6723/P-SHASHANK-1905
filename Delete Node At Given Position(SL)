class Node:
  def __init__(self,data):
    self.data=data
    self.ref=None

class LinkedList:
  def __init__(self):
    self.head=None

  def print_LL(self):
    if self.head is None:
      print("Linked List is empty")

    else:
      n=self.head
      while n is not None:
        print(n.data,"--->",end="")
        n=n.ref

  def add_begin(self,data):
    new_node = Node(data)
    new_node.ref=self.head
    self.head=new_node

  def delete_position(self,x):
    if self.head is None:
      print("LL is empty")
      return
    if x==self.head.data:
      self.head=self.head.ref
      return
    n=self.head
    while n.ref is not None:
      if x==n.ref.data:
        break
      n=n.ref
    if n.ref is None:
      print('Node not present')
    else:
      n.ref=n.ref.ref

LL1=LinkedList()
LL1.add_begin(10)
LL1.add_begin(20)
LL1.add_begin(30)
LL1.add_begin(15)
LL1.add_begin(35)
LL1.add_begin(55)
LL1.delete_position(30)
LL1.print_LL()
