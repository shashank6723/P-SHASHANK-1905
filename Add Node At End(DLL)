class Node:
    def __init__(self, data):
        self.data = data
        self.next = None
        self.prev = None

class doublyLL:
    def __init__(self):
        self.head = None
    
    
    def print_LL(self):
        if self.head is None:
            print("The list is empty")
            return
        else:
            n = self.head
            while n is not None:
                print(n.data,"-->",end='')
                n = n.next

    def add_end(self,data):
      new_node=Node(data)
      if self.head is None:
        self.head=new_node
      else:
        n=self.head
        while n.next is not None:
          n=n.next
        n.next=new_node
        new_node.prev=n

LL1 = doublyLL()
LL1.add_end(20)
LL1.add_end(30)
LL1.add_end(40)
LL1.add_end(50)
LL1.print_LL()
